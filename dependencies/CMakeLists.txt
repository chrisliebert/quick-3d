# Copyright (C) 2016 Chris Liebert

CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

PROJECT(quick3d-dependencies)

SET(CMAKE_BUILD_TYPE Debug)

FIND_PACKAGE(SQLITE3 QUIET)

IF(NOT SQLITE3_FOUND)
	INCLUDE(FindPkgConfig)
	PKG_SEARCH_MODULE(SQLITE3 REQUIRED sqlite3)
ENDIF(NOT SQLITE3_FOUND)

IF(NOT SQLITE3_FOUND)
	MESSAGE(ERROR " SQLITE3 not found")
ENDIF(NOT SQLITE3_FOUND)

INCLUDE_DIRECTORIES(${SQLITE3_INCLUDE_DIRS})
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})

IF(MSVC)
	ADD_LIBRARY(stdc++ support/msvc-stdc++.cpp)
	set(MSVCLIBPATH "${CMAKE_EXE_LINKER_FLAGS} /LIBPATH:${CMAKE_CURRENT_SOURCE_DIR}")
	set(CMAKE_EXE_LINKER_FLAGS "${MSVCLIBPATH}")
ENDIF(MSVC)


INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/tinyobjloader)

ADD_LIBRARY(tinyobjloader STATIC
	tinyobjloader/tiny_obj_loader.cc
	tinyobjloader/tiny_obj_loader.h
)

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/obj2sqlite)

ADD_LIBRARY(scenebuilder
	obj2sqlite/ConfigLoader.cpp
	obj2sqlite/ConfigLoader.h
	obj2sqlite/SceneBuilder.cpp
	obj2sqlite/SceneBuilder.h
)

ADD_EXECUTABLE(obj2sqlite
	obj2sqlite/obj2sqlite.cpp
)

LINK_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})
LINK_DIRECTORIES(${SQLITE3_LIBRARY_DIRS})

ADD_DEFINITIONS(${SQLITE3_DEFINITIONS})

TARGET_LINK_LIBRARIES(scenebuilder tinyobjloader ${SQLITE3_LIBRARIES})
TARGET_LINK_LIBRARIES(obj2sqlite scenebuilder)

INSTALL(TARGETS ${SQLITE3_LIBRARY} tinyobjloader scenebuilder DESTINATION ${CMAKE_CURRENT_SOURCE_DIR})

# Install obj2sqlite binary to parent directory
INSTALL(TARGETS obj2sqlite DESTINATION ${CMAKE_CURRENT_SOURCE_DIR}/..)

# Install stdc++.lib on MSVC
IF(MSVC)
	INSTALL(TARGETS stdc++ DESTINATION ${CMAKE_CURRENT_SOURCE_DIR})
ENDIF(MSVC)

