# Copyright (C) 2016 Chris Liebert

CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

PROJECT(quick3d-dependencies)

SET(CMAKE_BUILD_TYPE Debug)

FIND_PACKAGE(SQLITE3 QUIET)

# If SQLite3 is not found, build the buildled version
IF(NOT SQLITE3_FOUND)
	INCLUDE(FindPkgConfig)
	PKG_SEARCH_MODULE(SQLITE3 sqlite3)
ENDIF(NOT SQLITE3_FOUND)

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})

# If SQLite3 is not found, build the buildled version
IF(NOT SQLITE3_FOUND)
	MESSAGE(INFO " SQLITE3 not found, building buildled version")

	SET(SQLITE3_LIBRARY sqlite3)
	SET(SQLITE3_LIBRARIES sqlite3)
	
	IF(MSVC)
		set(MSVCLIBPATH "${CMAKE_EXE_LINKER_FLAGS} /LIBPATH:${CMAKE_CURRENT_SOURCE_DIR}")
		set(CMAKE_EXE_LINKER_FLAGS "${MSVCLIBPATH}")
	ELSEIF(MSVC)
		SET(SQLITE3_LIBRARIES sqlite3 m)
	ENDIF(MSVC)

	INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/sqlite3)
	
	ADD_LIBRARY(${SQLITE3_LIBRARY} STATIC
		sqlite3/sqlite3.c
		sqlite3/sqlite3.h
	)

	IF(MSVC)
		TARGET_LINK_LIBRARIES(sqlite3)
	ELSEIF(UNIX)
		FIND_PACKAGE (Threads REQUIRED)
		
		TARGET_LINK_LIBRARIES(sqlite3 dl m ${CMAKE_THREAD_LIBS_INIT})
	ELSE(MSVC)
		TARGET_LINK_LIBRARIES(sqlite3 m)
	ENDIF(MSVC)
	
ELSEIF(NOT SQLITE3_FOUND)
	LINK_DIRECTORIES(${SQLITE3_LIBRARY_DIRS})
	ADD_DEFINITIONS(${SQLITE3_DEFINITIONS})
ENDIF(NOT SQLITE3_FOUND)

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/tinyobjloader)

ADD_SUBDIRECTORY(tinyobjloader)

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/obj2sqlite)

ADD_LIBRARY(scenebuilder
	obj2sqlite/ConfigLoader.cpp
	obj2sqlite/ConfigLoader.h
	obj2sqlite/SceneBuilder.cpp
	obj2sqlite/SceneBuilder.h
)

ADD_DEFINITIONS(-DGAMEPAD_STATIC_LIB)
ADD_LIBRARY(gamepad STATIC
	libgamepad/gamepad.c
	libgamepad/gamepad.h
)

IF(UNIX)
	TARGET_LINK_LIBRARIES(gamepad c m udev)
ENDIF(UNIX)

IF(MSVC)
	ADD_LIBRARY(stdc++ STATIC support/dummy.cpp)
	INSTALL(TARGETS stdc++ DESTINATION ${CMAKE_CURRENT_SOURCE_DIR})
ENDIF(MSVC)

IF(WIN32)
	ADD_LIBRARY(udev STATIC	support/dummy.cpp)
	INSTALL(TARGETS udev DESTINATION ${CMAKE_CURRENT_SOURCE_DIR})
ENDIF(WIN32)

ADD_EXECUTABLE(obj2sqlite
	obj2sqlite/obj2sqlite.cpp
)

LINK_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})

TARGET_LINK_LIBRARIES(scenebuilder tinyobjloader ${SQLITE3_LIBRARIES})
TARGET_LINK_LIBRARIES(obj2sqlite scenebuilder)

INSTALL(TARGETS ${SQLITE3_LIBRARY} tinyobjloader scenebuilder DESTINATION ${CMAKE_CURRENT_SOURCE_DIR})

# Install obj2sqlite binary to parent directory
INSTALL(TARGETS obj2sqlite DESTINATION ${CMAKE_CURRENT_SOURCE_DIR}/..)
INSTALL(TARGETS gamepad DESTINATION ${CMAKE_CURRENT_SOURCE_DIR})
